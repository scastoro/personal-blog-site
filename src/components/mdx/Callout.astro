---
export interface Props {
  type?: 'info' | 'warning' | 'error' | 'success' | 'tip';
  title?: string;
  icon?: string;
}

const { type = 'info', title, icon } = Astro.props;

// Define styles for each callout type
const typeStyles = {
  info: {
    container: 'bg-blue-50 border-blue-200 dark:bg-blue-900/20 dark:border-blue-800',
    icon: 'text-blue-600 dark:text-blue-400',
    title: 'text-blue-800 dark:text-blue-300',
    content: 'text-blue-700 dark:text-blue-200'
  },
  warning: {
    container: 'bg-yellow-50 border-yellow-200 dark:bg-yellow-900/20 dark:border-yellow-800',
    icon: 'text-yellow-600 dark:text-yellow-400',
    title: 'text-yellow-800 dark:text-yellow-300',
    content: 'text-yellow-700 dark:text-yellow-200'
  },
  error: {
    container: 'bg-red-50 border-red-200 dark:bg-red-900/20 dark:border-red-800',
    icon: 'text-red-600 dark:text-red-400',
    title: 'text-red-800 dark:text-red-300',
    content: 'text-red-700 dark:text-red-200'
  },
  success: {
    container: 'bg-green-50 border-green-200 dark:bg-green-900/20 dark:border-green-800',
    icon: 'text-green-600 dark:text-green-400',
    title: 'text-green-800 dark:text-green-300',
    content: 'text-green-700 dark:text-green-200'
  },
  tip: {
    container: 'bg-purple-50 border-purple-200 dark:bg-purple-900/20 dark:border-purple-800',
    icon: 'text-purple-600 dark:text-purple-400',
    title: 'text-purple-800 dark:text-purple-300',
    content: 'text-purple-700 dark:text-purple-200'
  }
};

// Default icons for each type
const defaultIcons = {
  info: 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z',
  warning: 'M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z',
  error: 'M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z',
  success: 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z',
  tip: 'M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z'
};

const styles = typeStyles[type];
const iconPath = icon || defaultIcons[type];

// Default titles for each type
const defaultTitles = {
  info: 'Info',
  warning: 'Warning',
  error: 'Error',
  success: 'Success',
  tip: 'Tip'
};

const displayTitle = title || defaultTitles[type];
---

<div class={`border-l-4 rounded-r-lg p-4 my-6 ${styles.container}`} role="note">
  <div class="flex">
    <div class="flex-shrink-0">
      <svg class={`h-5 w-5 ${styles.icon}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={iconPath} />
      </svg>
    </div>
    <div class="ml-3 flex-1">
      <h3 class={`text-sm font-medium ${styles.title} mb-1`}>
        {displayTitle}
      </h3>
      <div class={`text-sm ${styles.content} prose prose-sm max-w-none [&>*:first-child]:mt-0 [&>*:last-child]:mb-0`}>
        <slot />
      </div>
    </div>
  </div>
</div>

<style>
  /* Override prose styles within callouts to match the callout color scheme */
  .prose a {
    color: inherit;
    text-decoration: underline;
    text-decoration-color: currentColor;
    opacity: 0.8;
  }
  
  .prose a:hover {
    opacity: 1;
  }
  
  .prose code {
    background-color: rgba(0, 0, 0, 0.1);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }
  
  .dark .prose code {
    background-color: rgba(255, 255, 255, 0.1);
  }
</style>